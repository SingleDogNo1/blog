{"title":"nodejs随笔--fs模块","slug":"模块","date":"2017-10-20T06:11:27.000Z","updated":"2023-06-21T08:55:09.216Z","comments":true,"path":"api/articles/模块.json","excerpt":null,"covers":null,"content":"<p>事情要从我的工作说起，可能出于安全考虑，公司的开发环境类似内网开发，电脑上安装了加密软件，电脑上的东西无法上传到外网的 git 工具，而且直接上传之后的文件打开是无法恢复的乱码。但是作为程序员，自然有其他方法，把东西拿出来</p>\n<blockquote>\n<p>因为公司的加密软件是按文件格式加密的，前端的文件，只加密了 vue 文件。所以思路就是把文件复制出来，再把 .vue 结尾的文件保存成为 txt 格式，我们的目的就达到了</p>\n</blockquote>\n<p>其实这个功能比较简单，但是我平时的工作偏向前端，没有写过这种纯粹的后台逻辑，所以用了较长的时间才实现，记录下来加深一下印象。最后我也会把例子发出来，有想研究或者嘲讽的都可以下载试试（当然项目源码是不能发出来的）</p>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><p>首先创建拷贝的项目，初始化 npm，安装<code>empty-folder</code>，用来清空文件夹，创建一个 <code>source</code>文件夹用来存放源码，创建<code>target</code>文件夹用来保存处理后的文件。创建一个<code>copy.js</code>文件，把项目拷贝进<code>source</code>文件夹，创建一个<code>do.js</code>用来把<code>source</code>文件夹中的文件处理完保存到<code>target</code>文件夹中，创建一个<code>undo.js</code>用来把<code>target</code>中的文件还原回来。<br>目录结构如下</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src</span><br><span class=\"line\">  - source -- 源文件夹</span><br><span class=\"line\">  - target -- 目标文件夹</span><br><span class=\"line\">  - copy.js -- 复制文件</span><br><span class=\"line\">  - do.js -- 保存文件</span><br><span class=\"line\">  - undo.js -- 恢复文件</span><br><span class=\"line\">  - package.json -- 安装了`empty-folder`</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"copy-js\"><a href=\"#copy-js\" class=\"headerlink\" title=\"copy.js\"></a>copy.js</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> stat = fs.stat;</span><br><span class=\"line\"><span class=\"keyword\">var</span> empty = <span class=\"built_in\">require</span>(<span class=\"string\">'empty-folder'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> copy = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">    fs.readdir(src, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, paths</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">        paths.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">path</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _src = src + <span class=\"string\">'/'</span> + path;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _dst = dst + <span class=\"string\">'/'</span> + path;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> readable;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> writable;</span><br><span class=\"line\">            stat(_src, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, st</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">                    readable = fs.createReadStream(_src);<span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">                    writable = fs.createWriteStream(_dst);<span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">                    readable.pipe(writable);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">                  <span class=\"comment\">// 不需要拷贝的文件夹</span></span><br><span class=\"line\">                  <span class=\"keyword\">const</span> exclude = [<span class=\"string\">'node_modules'</span>, <span class=\"string\">'.idea'</span>, <span class=\"string\">'.git'</span>, <span class=\"string\">'.vscode'</span>]</span><br><span class=\"line\">                  <span class=\"keyword\">let</span> flag = exclude.reduce(<span class=\"function\">(<span class=\"params\">res,cur</span>)=&gt;</span> &#123;</span><br><span class=\"line\">                    res = res || _src.includes(cur)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">                  &#125;, <span class=\"literal\">false</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">                  <span class=\"keyword\">if</span> (!flag) &#123;</span><br><span class=\"line\">                    exists(_src, _dst, copy);</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> exists = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\">    fs.exists(dst, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">exists</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (exists) &#123;<span class=\"comment\">//不存在</span></span><br><span class=\"line\">            callback(src, dst);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//存在</span></span><br><span class=\"line\">            fs.mkdir(dst, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//创建目录</span></span><br><span class=\"line\">                callback(src, dst)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 先清空 source 文件夹</span></span><br><span class=\"line\">empty(<span class=\"string\">'./source'</span>, <span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'clean folder'</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 拷贝D盘中的项目 A 到 source文件夹</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">    resolve(exists(<span class=\"string\">'D:/workspace/yunsa_cloud_fre'</span>, <span class=\"string\">'./source/yunsa_cloud_fre'</span>, copy))</span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy yunsa_cloud_fre success'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 拷贝桌面上的项目二到 source 文件夹</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">      resolve(exists(<span class=\"string\">'../vue-form-making@1.2.13'</span>, <span class=\"string\">'./source/vue-form-making'</span>, copy))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy vue-form-making success'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 拷贝桌面上的项目三到 source 文件夹</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">      resolve(exists(<span class=\"string\">'../vue-g6-editor'</span>, <span class=\"string\">'./source/vue-g6-editor'</span>, copy))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy vue-g6-editor success'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"do-js\"><a href=\"#do-js\" class=\"headerlink\" title=\"do.js\"></a>do.js</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> stat = fs.stat</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> empty = <span class=\"built_in\">require</span>(<span class=\"string\">'empty-folder'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copy</span>(<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">  fs.readdir(src, (err, paths) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    paths.forEach(<span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _src = src + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _dst = dst + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      stat(_src, (err, st) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> name = path.basename(_src)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> readable = fs.createReadStream(_src) <span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> writable</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">// 如果文件是以.vue 结尾的，读取流数据，再写入到目标文件，并更名为.vue.txt</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"regexp\">/\\.vue$/</span>.test(name)) &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst + <span class=\"string\">'.txt'</span>) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          readable.pipe(writable)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">          exists(_src, _dst, copy)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exists</span>(<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">  fs.exists(dst, (exists) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (exists) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//不存在</span></span><br><span class=\"line\">      callback(src, dst)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//存在</span></span><br><span class=\"line\">      fs.mkdir(dst, () =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建目录</span></span><br><span class=\"line\">        callback(src, dst)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 清空 target 文件夹</span></span><br><span class=\"line\">empty(<span class=\"string\">'./target'</span>, <span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'clean folder'</span>)</span><br><span class=\"line\">  exists(<span class=\"string\">'./source'</span>, <span class=\"string\">'./target'</span>, copy)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"undo-js\"><a href=\"#undo-js\" class=\"headerlink\" title=\"undo.js\"></a>undo.js</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> stat = fs.stat</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copy</span>(<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">  fs.readdir(src, (err, paths) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    paths.forEach(<span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _src = src + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _dst = dst + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      stat(_src, (err, st) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> name = path.basename(_src)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> readable = fs.createReadStream(_src) <span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> writable</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"regexp\">/\\.vue.txt$/</span>.test(name)) &#123;</span><br><span class=\"line\">          \t<span class=\"comment\">// 如果是.vue.txt 的文件，改名成.vue</span></span><br><span class=\"line\">            writable = fs.createWriteStream(_dst.split(<span class=\"string\">'.txt'</span>)[<span class=\"number\">0</span>]) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          readable.pipe(writable)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">          exists(_src, _dst, copy)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exists</span>(<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">  fs.exists(dst, (exists) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (exists) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//不存在</span></span><br><span class=\"line\">      callback(src, dst)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//存在</span></span><br><span class=\"line\">      fs.mkdir(dst, () =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建目录</span></span><br><span class=\"line\">        callback(src, dst)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exists(<span class=\"string\">'./target'</span>, <span class=\"string\">'./source'</span>, copy)</span><br></pre></td></tr></table></figure></div>\n","more":"<p>事情要从我的工作说起，可能出于安全考虑，公司的开发环境类似内网开发，电脑上安装了加密软件，电脑上的东西无法上传到外网的 git 工具，而且直接上传之后的文件打开是无法恢复的乱码。但是作为程序员，自然有其他方法，把东西拿出来</p>\n<blockquote>\n<p>因为公司的加密软件是按文件格式加密的，前端的文件，只加密了 vue 文件。所以思路就是把文件复制出来，再把 .vue 结尾的文件保存成为 txt 格式，我们的目的就达到了</p>\n</blockquote>\n<p>其实这个功能比较简单，但是我平时的工作偏向前端，没有写过这种纯粹的后台逻辑，所以用了较长的时间才实现，记录下来加深一下印象。最后我也会把例子发出来，有想研究或者嘲讽的都可以下载试试（当然项目源码是不能发出来的）</p>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><p>首先创建拷贝的项目，初始化 npm，安装<code>empty-folder</code>，用来清空文件夹，创建一个 <code>source</code>文件夹用来存放源码，创建<code>target</code>文件夹用来保存处理后的文件。创建一个<code>copy.js</code>文件，把项目拷贝进<code>source</code>文件夹，创建一个<code>do.js</code>用来把<code>source</code>文件夹中的文件处理完保存到<code>target</code>文件夹中，创建一个<code>undo.js</code>用来把<code>target</code>中的文件还原回来。<br>目录结构如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src</span><br><span class=\"line\">  - source -- 源文件夹</span><br><span class=\"line\">  - target -- 目标文件夹</span><br><span class=\"line\">  - copy.js -- 复制文件</span><br><span class=\"line\">  - do.js -- 保存文件</span><br><span class=\"line\">  - undo.js -- 恢复文件</span><br><span class=\"line\">  - package.json -- 安装了`empty-folder`</span><br></pre></td></tr></table></figure>\n<h2 id=\"copy-js\"><a href=\"#copy-js\" class=\"headerlink\" title=\"copy.js\"></a>copy.js</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> stat = fs.stat;</span><br><span class=\"line\"><span class=\"keyword\">var</span> empty = <span class=\"built_in\">require</span>(<span class=\"string\">'empty-folder'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> copy = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">    fs.readdir(src, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, paths</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">        paths.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">path</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _src = src + <span class=\"string\">'/'</span> + path;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _dst = dst + <span class=\"string\">'/'</span> + path;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> readable;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> writable;</span><br><span class=\"line\">            stat(_src, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, st</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">                    readable = fs.createReadStream(_src);<span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">                    writable = fs.createWriteStream(_dst);<span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">                    readable.pipe(writable);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">                  <span class=\"comment\">// 不需要拷贝的文件夹</span></span><br><span class=\"line\">                  <span class=\"keyword\">const</span> exclude = [<span class=\"string\">'node_modules'</span>, <span class=\"string\">'.idea'</span>, <span class=\"string\">'.git'</span>, <span class=\"string\">'.vscode'</span>]</span><br><span class=\"line\">                  <span class=\"keyword\">let</span> flag = exclude.reduce(<span class=\"function\">(<span class=\"params\">res,cur</span>)=&gt;</span> &#123;</span><br><span class=\"line\">                    res = res || _src.includes(cur)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">                  &#125;, <span class=\"literal\">false</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">                  <span class=\"keyword\">if</span> (!flag) &#123;</span><br><span class=\"line\">                    exists(_src, _dst, copy);</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> exists = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\">    fs.exists(dst, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">exists</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (exists) &#123;<span class=\"comment\">//不存在</span></span><br><span class=\"line\">            callback(src, dst);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//存在</span></span><br><span class=\"line\">            fs.mkdir(dst, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//创建目录</span></span><br><span class=\"line\">                callback(src, dst)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 先清空 source 文件夹</span></span><br><span class=\"line\">empty(<span class=\"string\">'./source'</span>, <span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'clean folder'</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 拷贝D盘中的项目 A 到 source文件夹</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">    resolve(exists(<span class=\"string\">'D:/workspace/yunsa_cloud_fre'</span>, <span class=\"string\">'./source/yunsa_cloud_fre'</span>, copy))</span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy yunsa_cloud_fre success'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 拷贝桌面上的项目二到 source 文件夹</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">      resolve(exists(<span class=\"string\">'../vue-form-making@1.2.13'</span>, <span class=\"string\">'./source/vue-form-making'</span>, copy))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy vue-form-making success'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 拷贝桌面上的项目三到 source 文件夹</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">      resolve(exists(<span class=\"string\">'../vue-g6-editor'</span>, <span class=\"string\">'./source/vue-g6-editor'</span>, copy))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy vue-g6-editor success'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"do-js\"><a href=\"#do-js\" class=\"headerlink\" title=\"do.js\"></a>do.js</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> stat = fs.stat</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> empty = <span class=\"built_in\">require</span>(<span class=\"string\">'empty-folder'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copy</span>(<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">  fs.readdir(src, (err, paths) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    paths.forEach(<span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _src = src + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _dst = dst + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      stat(_src, (err, st) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> name = path.basename(_src)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> readable = fs.createReadStream(_src) <span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> writable</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">// 如果文件是以.vue 结尾的，读取流数据，再写入到目标文件，并更名为.vue.txt</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"regexp\">/\\.vue$/</span>.test(name)) &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst + <span class=\"string\">'.txt'</span>) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          readable.pipe(writable)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">          exists(_src, _dst, copy)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exists</span>(<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">  fs.exists(dst, (exists) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (exists) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//不存在</span></span><br><span class=\"line\">      callback(src, dst)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//存在</span></span><br><span class=\"line\">      fs.mkdir(dst, () =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建目录</span></span><br><span class=\"line\">        callback(src, dst)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 清空 target 文件夹</span></span><br><span class=\"line\">empty(<span class=\"string\">'./target'</span>, <span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'clean folder'</span>)</span><br><span class=\"line\">  exists(<span class=\"string\">'./source'</span>, <span class=\"string\">'./target'</span>, copy)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"undo-js\"><a href=\"#undo-js\" class=\"headerlink\" title=\"undo.js\"></a>undo.js</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> stat = fs.stat</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copy</span>(<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">  fs.readdir(src, (err, paths) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    paths.forEach(<span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _src = src + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _dst = dst + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      stat(_src, (err, st) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> name = path.basename(_src)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> readable = fs.createReadStream(_src) <span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> writable</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"regexp\">/\\.vue.txt$/</span>.test(name)) &#123;</span><br><span class=\"line\">          \t<span class=\"comment\">// 如果是.vue.txt 的文件，改名成.vue</span></span><br><span class=\"line\">            writable = fs.createWriteStream(_dst.split(<span class=\"string\">'.txt'</span>)[<span class=\"number\">0</span>]) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          readable.pipe(writable)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">          exists(_src, _dst, copy)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exists</span>(<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">  fs.exists(dst, (exists) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (exists) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//不存在</span></span><br><span class=\"line\">      callback(src, dst)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//存在</span></span><br><span class=\"line\">      fs.mkdir(dst, () =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建目录</span></span><br><span class=\"line\">        callback(src, dst)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exists(<span class=\"string\">'./target'</span>, <span class=\"string\">'./source'</span>, copy)</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"nodeJs","path":"api/categories/nodeJs.json"}],"tags":[{"name":"nodeJs","path":"api/tags/nodeJs.json"},{"name":"fs模块","path":"api/tags/fs模块.json"}]}