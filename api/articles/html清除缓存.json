{"title":"html 清除缓存","slug":"html清除缓存","date":"2017-11-25T00:25:15.000Z","updated":"2023-06-21T08:55:09.213Z","comments":true,"path":"api/articles/html清除缓存.json","excerpt":null,"covers":null,"content":"<h2 id=\"通过设置-meta-标签清除页面缓存\"><a href=\"#通过设置-meta-标签清除页面缓存\" class=\"headerlink\" title=\"通过设置 meta 标签清除页面缓存\"></a>通过设置 meta 标签清除页面缓存</h2><p>通过向 header 中添加以下代码可以清除页面缓存</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Cache-Control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache, no-store, must-revalidate\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Pragma\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Expires\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"0\"</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"Cache-Control-头域\"><a href=\"#Cache-Control-头域\" class=\"headerlink\" title=\"Cache-Control 头域\"></a>Cache-Control 头域</h3><p>Cache-Control 指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置 Cache-Control 并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括 <strong>no-cache</strong>、<strong>no-store</strong>、<strong>max-age</strong>、<strong>max-stale</strong>、<strong>min-fresh</strong>、<strong>only-if-cached</strong>，响应消息中的指令包括 <strong>public</strong>、<strong>private</strong>、<strong>no-cache</strong>、<strong>no-store</strong>、<strong>no-transform</strong>、<strong>must-revalidate</strong>、<strong>proxy-revalidate</strong>、<strong>max-age</strong>。各个消息中的指令含义如下</p>\n<ul>\n<li>Public 指示响应可被任何缓存区缓存</li>\n<li>Private 指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效</li>\n<li>no-cache 指示请求或响应消息不能缓存</li>\n<li>no-store 用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。</li>\n<li>must-revalidation/proxy-revalidation 如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证</li>\n<li>max-age 指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应</li>\n<li>min-fresh 指示客户机可以接收响应时间小于当前时间加上指定时间的响应</li>\n<li>max-stale 指示客户机可以接收超出超时期间的响应消息。如果指定 max-stale 消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。</li>\n</ul>\n<p>更多具体信息可以移步<a href=\"https://baike.baidu.com/item/Cache-control/1885913?fr=aladdin\" target=\"_blank\" rel=\"noopener\">百度百科</a>查看</p>\n<h3 id=\"pragma-与-no-cache-用于定义页面缓存-不缓存页面\"><a href=\"#pragma-与-no-cache-用于定义页面缓存-不缓存页面\" class=\"headerlink\" title=\"pragma 与 no-cache 用于定义页面缓存,不缓存页面\"></a>pragma 与 no-cache 用于定义页面缓存,不缓存页面</h3><h3 id=\"Expires-可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用-GMT-的时间格式\"><a href=\"#Expires-可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用-GMT-的时间格式\" class=\"headerlink\" title=\"Expires 可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用 GMT 的时间格式\"></a>Expires 可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用 GMT 的时间格式</h3><h3 id=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\"><a href=\"#如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\" class=\"headerlink\" title=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\"></a>如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成</h3><h2 id=\"通过异步请求更新数据\"><a href=\"#通过异步请求更新数据\" class=\"headerlink\" title=\"通过异步请求更新数据\"></a>通过异步请求更新数据</h2><h3 id=\"使用-ajax-请求文件时加上请求头-If-Modified-Since-和-Cache-Control\"><a href=\"#使用-ajax-请求文件时加上请求头-If-Modified-Since-和-Cache-Control\" class=\"headerlink\" title=\"使用 ajax 请求文件时加上请求头 If-Modified-Since 和 Cache-Control\"></a>使用 ajax 请求文件时加上请求头 <strong>If-Modified-Since</strong> 和 <strong>Cache-Control</strong></h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:<span class=\"string\">'/'</span>,</span><br><span class=\"line\">  dataType:<span class=\"string\">'json'</span>,</span><br><span class=\"line\">  beforeSend :<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">xmlHttp</span>)</span>&#123;</span><br><span class=\"line\">    xmlHttp.setRequestHeader(<span class=\"string\">\"If-Modified-Since\"</span>,<span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">    xmlHttp.setRequestHeader(<span class=\"string\">\"Cache-Control\"</span>,<span class=\"string\">\"no-cache\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">async</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"你也可以试试直接使用-cache-false\"><a href=\"#你也可以试试直接使用-cache-false\" class=\"headerlink\" title=\"你也可以试试直接使用 cache:false\"></a>你也可以试试直接使用 <strong>cache:false</strong></h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:<span class=\"string\">'/'</span>,</span><br><span class=\"line\">  dataType:<span class=\"string\">'json'</span>,</span><br><span class=\"line\">  data:&#123;&#125;,</span><br><span class=\"line\">  cache:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  ifModified :<span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">async</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n","more":"<h2 id=\"通过设置-meta-标签清除页面缓存\"><a href=\"#通过设置-meta-标签清除页面缓存\" class=\"headerlink\" title=\"通过设置 meta 标签清除页面缓存\"></a>通过设置 meta 标签清除页面缓存</h2><p>通过向 header 中添加以下代码可以清除页面缓存</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Cache-Control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache, no-store, must-revalidate\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Pragma\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Expires\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"0\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Cache-Control-头域\"><a href=\"#Cache-Control-头域\" class=\"headerlink\" title=\"Cache-Control 头域\"></a>Cache-Control 头域</h3><p>Cache-Control 指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置 Cache-Control 并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括 <strong>no-cache</strong>、<strong>no-store</strong>、<strong>max-age</strong>、<strong>max-stale</strong>、<strong>min-fresh</strong>、<strong>only-if-cached</strong>，响应消息中的指令包括 <strong>public</strong>、<strong>private</strong>、<strong>no-cache</strong>、<strong>no-store</strong>、<strong>no-transform</strong>、<strong>must-revalidate</strong>、<strong>proxy-revalidate</strong>、<strong>max-age</strong>。各个消息中的指令含义如下</p>\n<ul>\n<li>Public 指示响应可被任何缓存区缓存</li>\n<li>Private 指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效</li>\n<li>no-cache 指示请求或响应消息不能缓存</li>\n<li>no-store 用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。</li>\n<li>must-revalidation/proxy-revalidation 如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证</li>\n<li>max-age 指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应</li>\n<li>min-fresh 指示客户机可以接收响应时间小于当前时间加上指定时间的响应</li>\n<li>max-stale 指示客户机可以接收超出超时期间的响应消息。如果指定 max-stale 消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。</li>\n</ul>\n<p>更多具体信息可以移步<a href=\"https://baike.baidu.com/item/Cache-control/1885913?fr=aladdin\" target=\"_blank\" rel=\"noopener\">百度百科</a>查看</p>\n<h3 id=\"pragma-与-no-cache-用于定义页面缓存-不缓存页面\"><a href=\"#pragma-与-no-cache-用于定义页面缓存-不缓存页面\" class=\"headerlink\" title=\"pragma 与 no-cache 用于定义页面缓存,不缓存页面\"></a>pragma 与 no-cache 用于定义页面缓存,不缓存页面</h3><h3 id=\"Expires-可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用-GMT-的时间格式\"><a href=\"#Expires-可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用-GMT-的时间格式\" class=\"headerlink\" title=\"Expires 可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用 GMT 的时间格式\"></a>Expires 可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用 GMT 的时间格式</h3><h3 id=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\"><a href=\"#如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\" class=\"headerlink\" title=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\"></a>如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成</h3><h2 id=\"通过异步请求更新数据\"><a href=\"#通过异步请求更新数据\" class=\"headerlink\" title=\"通过异步请求更新数据\"></a>通过异步请求更新数据</h2><h3 id=\"使用-ajax-请求文件时加上请求头-If-Modified-Since-和-Cache-Control\"><a href=\"#使用-ajax-请求文件时加上请求头-If-Modified-Since-和-Cache-Control\" class=\"headerlink\" title=\"使用 ajax 请求文件时加上请求头 If-Modified-Since 和 Cache-Control\"></a>使用 ajax 请求文件时加上请求头 <strong>If-Modified-Since</strong> 和 <strong>Cache-Control</strong></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:<span class=\"string\">'/'</span>,</span><br><span class=\"line\">  dataType:<span class=\"string\">'json'</span>,</span><br><span class=\"line\">  beforeSend :<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">xmlHttp</span>)</span>&#123;</span><br><span class=\"line\">    xmlHttp.setRequestHeader(<span class=\"string\">\"If-Modified-Since\"</span>,<span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">    xmlHttp.setRequestHeader(<span class=\"string\">\"Cache-Control\"</span>,<span class=\"string\">\"no-cache\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">async</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"你也可以试试直接使用-cache-false\"><a href=\"#你也可以试试直接使用-cache-false\" class=\"headerlink\" title=\"你也可以试试直接使用 cache:false\"></a>你也可以试试直接使用 <strong>cache:false</strong></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:<span class=\"string\">'/'</span>,</span><br><span class=\"line\">  dataType:<span class=\"string\">'json'</span>,</span><br><span class=\"line\">  data:&#123;&#125;,</span><br><span class=\"line\">  cache:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  ifModified :<span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">async</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"html5","path":"api/categories/html5.json"}],"tags":[{"name":"html5","path":"api/tags/html5.json"},{"name":"cache","path":"api/tags/cache.json"}]}