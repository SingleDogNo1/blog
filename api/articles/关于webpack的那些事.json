{"title":"关于webpack的那些事","slug":"关于webpack的那些事","date":"2018-03-22T02:37:40.000Z","updated":"2023-06-21T08:55:09.215Z","comments":true,"path":"api/articles/关于webpack的那些事.json","excerpt":null,"covers":null,"content":"<h2 id=\"Entry-配置模块入口\"><a href=\"#Entry-配置模块入口\" class=\"headerlink\" title=\"Entry - 配置模块入口\"></a>Entry - 配置模块入口</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"><span>webpack.base.conf.js</span></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  配置多入口文件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> glob = <span class=\"built_in\">require</span>(<span class=\"string\">'glob'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> pagePath = path.resolve(__dirname,<span class=\"string\">'./src'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">entries</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> entryFiles = glob.sync(pagePath + <span class=\"string\">'/*/*.js'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> map = &#123;&#125;;</span><br><span class=\"line\">  entryFiles.forEach(<span class=\"function\">(<span class=\"params\">filePath</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> filename = filePath.substring(filePath.lastIndexOf(<span class=\"string\">'\\/'</span>) + <span class=\"number\">1</span>, filePath.lastIndexOf(<span class=\"string\">'.'</span>));</span><br><span class=\"line\">  map[filename] = filePath</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> map</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Output-配置模块如何输出成为结果\"><a href=\"#Output-配置模块如何输出成为结果\" class=\"headerlink\" title=\"Output - 配置模块如何输出成为结果\"></a>Output - 配置模块如何输出成为结果</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"><span>webpack.base.conf.js</span></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  配置多个文件打包</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> glob = <span class=\"built_in\">require</span>(<span class=\"string\">'glob'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> pagePath = path.resolve(__dirname,<span class=\"string\">'./src'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">htmlPlugin</span>(<span class=\"params\">options</span>) </span>&#123;  <span class=\"comment\">//  options: 自定义缺省的htmlWebpackPlugin参数</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> entryHtml = glob.sync(pagePath + <span class=\"string\">'/*/*.html'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">  entryHtml.forEach(<span class=\"function\">(<span class=\"params\">filePath</span>) =&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> filename = filePath.substring(filePath.lastIndexOf(<span class=\"string\">'\\/'</span>) + <span class=\"number\">1</span>, filePath.lastIndexOf(<span class=\"string\">'.'</span>)); <span class=\"comment\">//  获取文件名</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> conf = &#123;    <span class=\"comment\">//  htmlWebpackPlugin配置选项</span></span><br><span class=\"line\">      template: filePath,</span><br><span class=\"line\">      filename: filename + <span class=\"string\">'.html'</span>,   <span class=\"comment\">//  文件名</span></span><br><span class=\"line\">      chunks: [<span class=\"string\">'manifest'</span>, <span class=\"string\">'vendor'</span>, filename],    <span class=\"comment\">// 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本</span></span><br><span class=\"line\">      title:options.title,    <span class=\"comment\">// 文章标题</span></span><br><span class=\"line\">      inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      hash:<span class=\"literal\">true</span>,</span><br><span class=\"line\">      minify: &#123; <span class=\"comment\">//压缩HTML文件</span></span><br><span class=\"line\">        removeComments: <span class=\"literal\">true</span>, <span class=\"comment\">//移除HTML中的注释</span></span><br><span class=\"line\">        collapseWhitespace: <span class=\"literal\">false</span> <span class=\"comment\">//删除空白符与换行符</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    arr.push(<span class=\"keyword\">new</span> HtmlWebpackPlugin(conf))</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Module-配置模块的处理规则\"><a href=\"#Module-配置模块的处理规则\" class=\"headerlink\" title=\"Module - 配置模块的处理规则\"></a>Module - 配置模块的处理规则</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"><span>webpack.base.conf.js</span></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>:&#123;</span><br><span class=\"line\">  rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       test: <span class=\"regexp\">/\\.(png|jpe?g|gif|svg)(\\?.*)?$/</span>,</span><br><span class=\"line\">       use: <span class=\"string\">'url-loader?limit=2000&amp;name=images/[hash:8].[name].[ext]'</span>,  <span class=\"comment\">//  使用url-loader处理图像文件，小于2000转为base64，否则打包到images文件夹下名为[hash:8].[name].[ext]</span></span><br><span class=\"line\">       include:path.resolve(__dirname,<span class=\"string\">'src'</span>),  <span class=\"comment\">//  打包时包含src文件夹</span></span><br><span class=\"line\">         exclude:path.resolve(__dirname,<span class=\"string\">'node_modules'</span>),  <span class=\"comment\">// 打包时排除node_modules文件夹</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.scss$/</span>,</span><br><span class=\"line\">      use: [&#123;   <span class=\"comment\">//  loader的另一种配置方式(loader解析顺序从后往前)</span></span><br><span class=\"line\">          loader: <span class=\"string\">\"style-loader\"</span>,</span><br><span class=\"line\">          options: &#123;&#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">\"css-loader?minimize\"</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">\"postcss-loader\"</span>,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            postcss()&#123;</span><br><span class=\"line\">              <span class=\"built_in\">require</span>(<span class=\"string\">'autorefixer'</span>)(&#123;</span><br><span class=\"line\">                browsers:[<span class=\"string\">'ie&gt;8'</span>,<span class=\"string\">'&gt;1% in CN'</span>]</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">\"sass-loader\"</span></span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        exclude:path.resolve(__dirname,<span class=\"string\">'node_modules'</span>),</span><br><span class=\"line\">        include:path.resolve(__dirname,<span class=\"string\">'src'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Resolve-自定义模块的解析方式\"><a href=\"#Resolve-自定义模块的解析方式\" class=\"headerlink\" title=\"Resolve - 自定义模块的解析方式\"></a>Resolve - 自定义模块的解析方式</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"><span>webpack.base.conf.js</span></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">   <span class=\"comment\">//  导入文件没有后缀时，webpack尝试自动补全，顺序由前到后</span></span><br><span class=\"line\">   extensions: [<span class=\"string\">'.js'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'.json'</span>],</span><br><span class=\"line\">   <span class=\"comment\">//  允许自定义模块。以下例子中导入@/foo.js实际上是导入src/foo.js；并且支持使用$结尾缩小搜索范围(命中vue结尾的模块，及只会将 import vue 转换为 import vue/dist/vue.esm.js)</span></span><br><span class=\"line\">   alias: &#123;</span><br><span class=\"line\">     <span class=\"string\">'vue$'</span>: <span class=\"string\">'vue/dist/vue.esm.js'</span>,</span><br><span class=\"line\">     <span class=\"string\">'@'</span>: resolve(<span class=\"string\">'src'</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"><a href=\"#Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\" class=\"headerlink\" title=\"Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"></a>Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决</h2><blockquote>\n<p>该配置简单到无法解释，接受一个数组，添加插件即可。所有插件及用法<a href=\"https://doc.webpack-china.org/plugins/\" target=\"_blank\" rel=\"noopener\">看这里</a></p>\n</blockquote>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"><span>webpack.base.conf.js</span></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugin:[</span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.ProvidePlugin(&#123; <span class=\"comment\">//  这个插件用来配置全局jquery</span></span><br><span class=\"line\">    $: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    jQuery: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    jquery: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"window.jQuery\"</span>: <span class=\"string\">\"jquery\"</span></span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  <span class=\"keyword\">new</span> CleanWebpackPlugin([<span class=\"string\">'dist'</span>]), <span class=\"comment\">//  这个插件用来清空dist文件夹</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"DevSever-构建本地开发环境\"><a href=\"#DevSever-构建本地开发环境\" class=\"headerlink\" title=\"DevSever - 构建本地开发环境\"></a>DevSever - 构建本地开发环境</h2><blockquote>\n<p>具体配置<a href=\"https://doc.webpack-china.org/configuration/dev-server/\" target=\"_blank\" rel=\"noopener\">移步这里</a></p>\n</blockquote>\n<h2 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h2><h3 id=\"项目中使用sass\"><a href=\"#项目中使用sass\" class=\"headerlink\" title=\"项目中使用sass\"></a>项目中使用sass</h3><p>webpack.base.conf.js中的module新加一项：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"><span>webpack.base.conf.js</span></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  test: <span class=\"regexp\">/\\.scss$/</span>,</span><br><span class=\"line\">  use: [<span class=\"string\">\"style-loader\"</span>,<span class=\"string\">\"css-loader?minimize\"</span>,<span class=\"string\">\"sass-loader\"</span>],</span><br><span class=\"line\">  exclude:path.resolve(__dirname,<span class=\"string\">'node_modules'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"项目中使用jquery插件\"><a href=\"#项目中使用jquery插件\" class=\"headerlink\" title=\"项目中使用jquery插件\"></a>项目中使用jquery插件</h3><p>webpack.base.conf.js中的module新加plugin：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"><span>webpack.base.conf.js</span></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.ProvidePlugin(&#123;</span><br><span class=\"line\">    $: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    jQuery: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    jquery: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"window.jQuery\"</span>: <span class=\"string\">\"jquery\"</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  ]</span><br></pre></td></tr></table></figure></div>\n","more":"<h2 id=\"Entry-配置模块入口\"><a href=\"#Entry-配置模块入口\" class=\"headerlink\" title=\"Entry - 配置模块入口\"></a>Entry - 配置模块入口</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  配置多入口文件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> glob = <span class=\"built_in\">require</span>(<span class=\"string\">'glob'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> pagePath = path.resolve(__dirname,<span class=\"string\">'./src'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">entries</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> entryFiles = glob.sync(pagePath + <span class=\"string\">'/*/*.js'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> map = &#123;&#125;;</span><br><span class=\"line\">  entryFiles.forEach(<span class=\"function\">(<span class=\"params\">filePath</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> filename = filePath.substring(filePath.lastIndexOf(<span class=\"string\">'\\/'</span>) + <span class=\"number\">1</span>, filePath.lastIndexOf(<span class=\"string\">'.'</span>));</span><br><span class=\"line\">  map[filename] = filePath</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> map</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Output-配置模块如何输出成为结果\"><a href=\"#Output-配置模块如何输出成为结果\" class=\"headerlink\" title=\"Output - 配置模块如何输出成为结果\"></a>Output - 配置模块如何输出成为结果</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  配置多个文件打包</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> glob = <span class=\"built_in\">require</span>(<span class=\"string\">'glob'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> pagePath = path.resolve(__dirname,<span class=\"string\">'./src'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">htmlPlugin</span>(<span class=\"params\">options</span>) </span>&#123;  <span class=\"comment\">//  options: 自定义缺省的htmlWebpackPlugin参数</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> entryHtml = glob.sync(pagePath + <span class=\"string\">'/*/*.html'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">  entryHtml.forEach(<span class=\"function\">(<span class=\"params\">filePath</span>) =&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> filename = filePath.substring(filePath.lastIndexOf(<span class=\"string\">'\\/'</span>) + <span class=\"number\">1</span>, filePath.lastIndexOf(<span class=\"string\">'.'</span>)); <span class=\"comment\">//  获取文件名</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> conf = &#123;    <span class=\"comment\">//  htmlWebpackPlugin配置选项</span></span><br><span class=\"line\">      template: filePath,</span><br><span class=\"line\">      filename: filename + <span class=\"string\">'.html'</span>,   <span class=\"comment\">//  文件名</span></span><br><span class=\"line\">      chunks: [<span class=\"string\">'manifest'</span>, <span class=\"string\">'vendor'</span>, filename],    <span class=\"comment\">// 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本</span></span><br><span class=\"line\">      title:options.title,    <span class=\"comment\">// 文章标题</span></span><br><span class=\"line\">      inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      hash:<span class=\"literal\">true</span>,</span><br><span class=\"line\">      minify: &#123; <span class=\"comment\">//压缩HTML文件</span></span><br><span class=\"line\">        removeComments: <span class=\"literal\">true</span>, <span class=\"comment\">//移除HTML中的注释</span></span><br><span class=\"line\">        collapseWhitespace: <span class=\"literal\">false</span> <span class=\"comment\">//删除空白符与换行符</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    arr.push(<span class=\"keyword\">new</span> HtmlWebpackPlugin(conf))</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Module-配置模块的处理规则\"><a href=\"#Module-配置模块的处理规则\" class=\"headerlink\" title=\"Module - 配置模块的处理规则\"></a>Module - 配置模块的处理规则</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>:&#123;</span><br><span class=\"line\">  rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       test: <span class=\"regexp\">/\\.(png|jpe?g|gif|svg)(\\?.*)?$/</span>,</span><br><span class=\"line\">       use: <span class=\"string\">'url-loader?limit=2000&amp;name=images/[hash:8].[name].[ext]'</span>,  <span class=\"comment\">//  使用url-loader处理图像文件，小于2000转为base64，否则打包到images文件夹下名为[hash:8].[name].[ext]</span></span><br><span class=\"line\">       include:path.resolve(__dirname,<span class=\"string\">'src'</span>),  <span class=\"comment\">//  打包时包含src文件夹</span></span><br><span class=\"line\">         exclude:path.resolve(__dirname,<span class=\"string\">'node_modules'</span>),  <span class=\"comment\">// 打包时排除node_modules文件夹</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.scss$/</span>,</span><br><span class=\"line\">      use: [&#123;   <span class=\"comment\">//  loader的另一种配置方式(loader解析顺序从后往前)</span></span><br><span class=\"line\">          loader: <span class=\"string\">\"style-loader\"</span>,</span><br><span class=\"line\">          options: &#123;&#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">\"css-loader?minimize\"</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">\"postcss-loader\"</span>,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            postcss()&#123;</span><br><span class=\"line\">              <span class=\"built_in\">require</span>(<span class=\"string\">'autorefixer'</span>)(&#123;</span><br><span class=\"line\">                browsers:[<span class=\"string\">'ie&gt;8'</span>,<span class=\"string\">'&gt;1% in CN'</span>]</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">\"sass-loader\"</span></span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        exclude:path.resolve(__dirname,<span class=\"string\">'node_modules'</span>),</span><br><span class=\"line\">        include:path.resolve(__dirname,<span class=\"string\">'src'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Resolve-自定义模块的解析方式\"><a href=\"#Resolve-自定义模块的解析方式\" class=\"headerlink\" title=\"Resolve - 自定义模块的解析方式\"></a>Resolve - 自定义模块的解析方式</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">   <span class=\"comment\">//  导入文件没有后缀时，webpack尝试自动补全，顺序由前到后</span></span><br><span class=\"line\">   extensions: [<span class=\"string\">'.js'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'.json'</span>],</span><br><span class=\"line\">   <span class=\"comment\">//  允许自定义模块。以下例子中导入@/foo.js实际上是导入src/foo.js；并且支持使用$结尾缩小搜索范围(命中vue结尾的模块，及只会将 import vue 转换为 import vue/dist/vue.esm.js)</span></span><br><span class=\"line\">   alias: &#123;</span><br><span class=\"line\">     <span class=\"string\">'vue$'</span>: <span class=\"string\">'vue/dist/vue.esm.js'</span>,</span><br><span class=\"line\">     <span class=\"string\">'@'</span>: resolve(<span class=\"string\">'src'</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"><a href=\"#Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\" class=\"headerlink\" title=\"Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"></a>Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决</h2><blockquote>\n<p>该配置简单到无法解释，接受一个数组，添加插件即可。所有插件及用法<a href=\"https://doc.webpack-china.org/plugins/\" target=\"_blank\" rel=\"noopener\">看这里</a></p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugin:[</span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.ProvidePlugin(&#123; <span class=\"comment\">//  这个插件用来配置全局jquery</span></span><br><span class=\"line\">    $: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    jQuery: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    jquery: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"window.jQuery\"</span>: <span class=\"string\">\"jquery\"</span></span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  <span class=\"keyword\">new</span> CleanWebpackPlugin([<span class=\"string\">'dist'</span>]), <span class=\"comment\">//  这个插件用来清空dist文件夹</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h2 id=\"DevSever-构建本地开发环境\"><a href=\"#DevSever-构建本地开发环境\" class=\"headerlink\" title=\"DevSever - 构建本地开发环境\"></a>DevSever - 构建本地开发环境</h2><blockquote>\n<p>具体配置<a href=\"https://doc.webpack-china.org/configuration/dev-server/\" target=\"_blank\" rel=\"noopener\">移步这里</a></p>\n</blockquote>\n<h2 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h2><h3 id=\"项目中使用sass\"><a href=\"#项目中使用sass\" class=\"headerlink\" title=\"项目中使用sass\"></a>项目中使用sass</h3><p>webpack.base.conf.js中的module新加一项：</p>\n<figure class=\"highlight js\"><figcaption><span>webpack.base.conf.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  test: <span class=\"regexp\">/\\.scss$/</span>,</span><br><span class=\"line\">  use: [<span class=\"string\">\"style-loader\"</span>,<span class=\"string\">\"css-loader?minimize\"</span>,<span class=\"string\">\"sass-loader\"</span>],</span><br><span class=\"line\">  exclude:path.resolve(__dirname,<span class=\"string\">'node_modules'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"项目中使用jquery插件\"><a href=\"#项目中使用jquery插件\" class=\"headerlink\" title=\"项目中使用jquery插件\"></a>项目中使用jquery插件</h3><p>webpack.base.conf.js中的module新加plugin：</p>\n<figure class=\"highlight js\"><figcaption><span>webpack.base.conf.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">  <span class=\"keyword\">new</span> webpack.ProvidePlugin(&#123;</span><br><span class=\"line\">    $: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    jQuery: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    jquery: <span class=\"string\">\"jquery\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"window.jQuery\"</span>: <span class=\"string\">\"jquery\"</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  ]</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"webpack","path":"api/categories/webpack.json"}],"tags":[{"name":"webpack","path":"api/tags/webpack.json"}]}