{"title":"Css Grid 语法总结","slug":"grid","date":"2021-06-03T08:05:29.000Z","updated":"2023-06-21T08:55:09.213Z","comments":true,"path":"api/articles/grid.json","excerpt":null,"covers":null,"content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>Grid布局是目前css 中最强大的布局方案，它的原理是将网页划分为一个个网格，使用网格系统来呈现各种各样的布局效果。因此，使用它可以实现所有形式的布局，尤其在做一些不规则的布局时，grid 的强大更显得尤为出众。</p>\n<blockquote>\n<p>为什么 grid 布局不如 flex 使用广泛？<br>flex 布局方式为轴线布局，他通过指定基准线的位置来划分网页的区块，可以看做一维布局，而 grid 布局则是将容器划分成”行”和”列”，产生单元格，然后操作划分出的单元格，可以看作是二维布局。因此 flex 布局语法本身要较 grid 简单清晰，而且大部分布局需求都有规整的结构，使用 flex 就可以轻松实现。最后，grid 的兼容性相对 flex 较差，并且没有很好地兼容方式。</p>\n</blockquote>\n<p><strong>grid 布局于 flex 布局有一定的相似性，下面的教程会对照写法，加深印象</strong></p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"项目和容器\"><a href=\"#项目和容器\" class=\"headerlink\" title=\"项目和容器\"></a>项目和容器</h3><p>采用网格布局的区域，称为”容器”（container）。容器内部采用网格定位的直接子元素，称为”项目”（item）。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，<code>.container</code>为容器，3 个<code>.item</code>为项目。<br><strong>注意：项目只能是容器的直接子元素，比如上面代码的<code>&lt;p&gt;</code>就不是项目。Grid 布局只对<code>.item</code>生效。</strong></p>\n<h3 id=\"行、列、单元格\"><a href=\"#行、列、单元格\" class=\"headerlink\" title=\"行、列、单元格\"></a>行、列、单元格</h3><p>容器中水平的区域为行（row），垂直的区域为列（column），行和列交叉产生的区域称为单元格（cell）。<br>正常情况下，<code>m</code>行<code>n</code>列会产生<code>m * n</code>个单元格。</p>\n<h2 id=\"css-属性\"><a href=\"#css-属性\" class=\"headerlink\" title=\"css 属性\"></a>css 属性</h2><p>Grid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。</p>\n<h3 id=\"容器属性\"><a href=\"#容器属性\" class=\"headerlink\" title=\"容器属性\"></a>容器属性</h3><h4 id=\"display\"><a href=\"#display\" class=\"headerlink\" title=\"display\"></a>display</h4><p>使用<code>display: grid</code>可以指定一个容器采用网格布局。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>也可以使用<code>display: inline-grid</code>，设置为行内元素，效果类似于<code>inline-flex</code>。</p>\n<blockquote>\n<p>同 flex，设置为网格布局后，项目的<code>float</code>、<code>display: inline-block</code>等属性均失效</p>\n</blockquote>\n<h4 id=\"grid-template-columns-grid-template-rows\"><a href=\"#grid-template-columns-grid-template-rows\" class=\"headerlink\" title=\"grid-template-columns / grid-template-rows\"></a>grid-template-columns / grid-template-rows</h4><p>指定了网格布局后，就开始划分行和列。 <code>grid-template-columns</code> 用来定义每一列， <code>grid-template-rows</code>用来定义每一行。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码指定了一个三行三列的网格，宽高均为<code>100px</code></p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/AbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>也可以使用百分比</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/jbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"repeat\"><a href=\"#repeat\" class=\"headerlink\" title=\"repeat()\"></a>repeat()</h5><p>相信我们都发现了，当网格系统足够复杂时，需要我们写很多重复的值。这时可以使用<code>repeat()</code>函数简化重复的值，简化代码如下</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">3</span>, <span class=\"number\">33.33%</span>);</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">3</span>, <span class=\"number\">33.33%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p><code>repeat()</code>接受两个参数，第一个是重复的次数，第二个是需要重复的值。<strong>而且这里的值不必非得是固定的值，我们可以给定一组值，同样可以重复执行。</strong></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">2</span>, <span class=\"number\">100px</span> <span class=\"number\">80px</span> <span class=\"number\">60px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">9</span>, <span class=\"number\">100px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码表示每列按照<code>100px 80px 60px</code>的规则，重复两次。因此共得到了 6 列，表现为第一列和第四列的宽度为100px，第二列和第五列为80px，第三列和第六列为60px。又定义了 9 行，每行高度固定为<code>100px</code></p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/BbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"auto-fill\"><a href=\"#auto-fill\" class=\"headerlink\" title=\"auto-fill\"></a>auto-fill</h5><p>有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用<code>auto-fill</code>关键字表示自动填充。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(auto-fill, <span class=\"number\">100px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码容器宽<code>550px</code>，每列宽度<code>100px</code>，然后自动填充，因此从第六行开始折行显示。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/RbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"fr\"><a href=\"#fr\" class=\"headerlink\" title=\"fr\"></a>fr</h5><p>网格布局提供了<code>fr</code>关键字（fraction 的缩写，意为”片段”）。如果两列的宽度分别为1fr和2fr，就表示后者是前者的两倍。类似于 flex 中的项目的<code>flex-grow</code>属性。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码创建三个相同宽度的列。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/MbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p><code>fr</code>在与绝对长度的单位结合使用，会产生非常神奇的效果。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">150px</span> <span class=\"number\">1</span>fr <span class=\"number\">2</span>fr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码表示，第一列的宽度为150像素，第二列的宽度是第三列的一半。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/SbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"minmax\"><a href=\"#minmax\" class=\"headerlink\" title=\"minmax()\"></a>minmax()</h5><p><code>minmax()</code>函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr <span class=\"built_in\">minmax</span>(<span class=\"number\">100px</span>, <span class=\"number\">1</span>fr);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，minmax(100px, 1fr)表示列宽不小于100px，不大于1fr。</p>\n<h5 id=\"auto\"><a href=\"#auto\" class=\"headerlink\" title=\"auto\"></a>auto</h5><p><code>auto</code>关键字表示由浏览器自己决定长度。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> auto <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，第二列的宽度，基本上等于该列单元格的最大宽度，除非单元格内容设置了<code>min-width</code>，且这个值大于最大宽度。</p>\n<h5 id=\"网格线命名\"><a href=\"#网格线命名\" class=\"headerlink\" title=\"网格线命名\"></a>网格线命名</h5><p><code>grid-template-columns</code>属性和<code>grid-template-rows</code>属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: [c1] <span class=\"number\">100px</span> [c2] <span class=\"number\">100px</span> [c3] auto [c4];</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: [r1] <span class=\"number\">100px</span> [r2] <span class=\"number\">100px</span> [r3] auto [r4];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码指定网格布局为<code>3行 x 3列</code>，因此有<code>4</code>根垂直网格线和<code>4</code>根水平网格线。方括号里面依次是这八根线的名字。</p>\n<h4 id=\"row-gap-column-gap-gap\"><a href=\"#row-gap-column-gap-gap\" class=\"headerlink\" title=\"row-gap / column-gap / gap\"></a>row-gap / column-gap / gap</h4><p>grid-row-gap属性设置行与行的间隔（行间距），grid-column-gap属性设置列与列的间隔（列间距）。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">row-gap</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">column-gap</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，行间距和列间距均为<code>20px</code>。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/4bVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p><code>gap</code>属性是<code>column-gap</code>和<code>row-gap</code>的合并简写形式，语法如下。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">gap</span>: &lt;row-gap&gt; &lt;column-gap&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>因此，上面一段 CSS 代码等同于下面的代码。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">gap</span>: <span class=\"number\">20px</span> <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>如果<code>gap</code>省略了第二个值，浏览器认为第二个值等于第一个值。</p>\n<h4 id=\"grid-template-areas\"><a href=\"#grid-template-areas\" class=\"headerlink\" title=\"grid-template-areas\"></a>grid-template-areas</h4><p>网格布局允许指定”区域”（area），一个区域由单个或多个单元格组成。<code>grid-template-areas</code>属性用于定义区域。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a b c'</span></span><br><span class=\"line\">                       <span class=\"string\">'d e f'</span></span><br><span class=\"line\">                       <span class=\"string\">'g h i'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码先划分出9个单元格，然后将其定名为<code>a</code>到<code>i</code>的九个区域，分别对应这九个单元格。</p>\n<p>多个单元格合并成一个区域的写法如下。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a a a'</span></span><br><span class=\"line\">                       <span class=\"string\">'b b b'</span></span><br><span class=\"line\">                       <span class=\"string\">'c c c'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码将9个单元格分成<code>a</code>、<code>b</code>、<code>c</code>三个区域。</p>\n<p>下面是一个布局实例。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">\"header header header\"</span></span><br><span class=\"line\">                       <span class=\"string\">\"main main sidebar\"</span></span><br><span class=\"line\">                       <span class=\"string\">\"footer footer footer\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，顶部是<code>header</code>区域，底部是<code>footer</code>区域，中间部分左边为<code>main</code>区域，右边为<code>sidebar</code>区域。</p>\n<p>如果某些区域不需要利用，则使用<code>.</code>表示。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a . c'</span></span><br><span class=\"line\">                       <span class=\"string\">'d . f'</span></span><br><span class=\"line\">                       <span class=\"string\">'g . i'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域。</p>\n<blockquote>\n<p>注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为<code>区域名-start</code>，终止网格线自动命名为<code>区域名-end</code>。<br>比如，区域名为header，则起始位置的水平网格线和垂直网格线叫做<code>header-start</code>，终止位置的水平网格线和垂直网格线叫做<code>header-end</code>。</p>\n</blockquote>\n<h4 id=\"grid-auto-flow\"><a href=\"#grid-auto-flow\" class=\"headerlink\" title=\"grid-auto-flow\"></a>grid-auto-flow</h4><p>划分网格以后，容器的子元素会默认”先行后列”排序，即先填满第一行，再开始放入第二行，依次执行。</p>\n<p>通过<code>grid-auto-flow</code>属性可以改变网格的排序，默认为<code>row</code>,及“先行后列”，可以设置为<code>column</code>，变为“先列后行”。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/gWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>除了<code>row</code>和<code>column</code>，还可以设置为<code>row dense</code>和<code>column dense</code>。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。</p>\n<p>下面的例子中让1号项目和2号项目各占据两个单元格，然后在默认的<code>grid-auto-flow: row</code>情况下，会产生下面这样的布局。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/yWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>因为 3 号项目默认跟在 2 号项目之后，而第一行又无法容纳 2 号项目，所以第一行只能出现了空白。只要修改<code>grid-auto-flow: row dense</code>，就会在“先行后列”的基础上，尽可能紧密填满，不出现空格。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/bWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>如果将设置改为<code>column dense</code>，也是同样的意思，不过会遵循”先列后行”，并且尽量填满空格。</p>\n<h4 id=\"justify-items-align-items-place-items\"><a href=\"#justify-items-align-items-place-items\" class=\"headerlink\" title=\"justify-items / align-items / place-items\"></a>justify-items / align-items / place-items</h4><p><code>justify-items</code>属性设置单元格内容的水平位置，<code>align-items</code>属性设置单元格内容的垂直位置。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-items</span>: start | end | center | stretch;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: start | end | center | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>这两个属性的写法完全相同，都可以取下面这些值：</p>\n<ul>\n<li>start：对齐单元格的起始边缘。</li>\n<li>end：对齐单元格的结束边缘。</li>\n<li>center：单元格内部居中。</li>\n<li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li>\n</ul>\n<p><code>place-items</code>属性是<code>align-items</code>属性和<code>justify-items</code>属性的合并简写形式。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-items</span>: &lt;align-items&gt; &lt;justify-items&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>如果省略第二个值，则浏览器认为与第一个值相等。</p>\n<h4 id=\"justify-content-align-content-place-content\"><a href=\"#justify-content-align-content-place-content\" class=\"headerlink\" title=\"justify-content / align-content / place-content\"></a>justify-content / align-content / place-content</h4><p><code>justify-content</code>属性是整个内容区域在容器里面的水平位置，<code>align-content</code>属性是整个内容区域的垂直位置。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;</span><br><span class=\"line\">  <span class=\"attribute\">align-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>这两个属性的写法完全相同，都可以取下面这些值:</p>\n<ul>\n<li>start: 对齐容器的起始边框。</li>\n<li>end: 对齐容器的结束边框。</li>\n<li>center: 容器内部居中。</li>\n<li>stretch: 项目大小没有指定时，拉伸占据整个网格容器。</li>\n<li>space-around: 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍。</li>\n<li>space-between: 项目与项目的间隔相等，项目与容器边框之间没有间隔。</li>\n<li>space-evenly: 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。</li>\n</ul>\n<p><code>place-content</code>属性是<code>align-content</code>属性和<code>justify-content</code>属性的合并简写形式。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-content</span>: &lt;align-content&gt; &lt;justify-content&gt;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>如果省略第二个值，浏览器就会假定第二个值等于第一个值。</p>\n<h4 id=\"grid-auto-columns-grid-auto-rows\"><a href=\"#grid-auto-columns-grid-auto-rows\" class=\"headerlink\" title=\"grid-auto-columns / grid-auto-rows\"></a>grid-auto-columns / grid-auto-rows</h4><p>有时候，一些项目的指定位置，在现有网格的外部。比如网格只有3列，但是某一个项目指定在第5行。这时，浏览器会自动生成多余的网格，以便放置项目。</p>\n<p><code>grid-auto-columns</code>属性和<code>grid-auto-rows</code>属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与<code>grid-template-columns</code>和<code>grid-template-rows</code>完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。</p>\n<p>下面的例子里面，划分好的网格是3行 x 3列，但是，8号项目指定在第4行，9号项目指定在第5行,并指定新增的行高统一为50px（原始的行高为100px）。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-auto-rows</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/wWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"项目属性\"><a href=\"#项目属性\" class=\"headerlink\" title=\"项目属性\"></a>项目属性</h3><h4 id=\"grid-column-start-grid-column-end-grid-row-start-grid-row-end-grid-column-grid-row\"><a href=\"#grid-column-start-grid-column-end-grid-row-start-grid-row-end-grid-column-grid-row\" class=\"headerlink\" title=\"grid-column-start / grid-column-end / grid-row-start / grid-row-end / grid-column / grid-row\"></a>grid-column-start / grid-column-end / grid-row-start / grid-row-end / grid-column / grid-row</h4><p>项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。</p>\n<ul>\n<li><code>grid-column-start</code>表示左边框贴紧的垂直网格线</li>\n<li><code>grid-column-end</code>表示右边框贴紧的垂直网格线</li>\n<li><code>grid-row-start</code>表示上边框贴紧的水平网格线</li>\n<li><code>grid-row-end</code>表示下边框贴紧的水平网格线</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: <span class=\"number\">4</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码指定，1号项目的左边框是第二根垂直网格线，右边框是第四根垂直网格线。但并没有指定上下边框，所以会采用默认位置。而除了1号项目以外，其他项目都没有指定位置，将由浏览器自动布局，这时它们的位置由容器的<code>grid-auto-flow</code>属性决定，参考上面的教程，不再赘述。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/TWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>下面的例子是指定四个边框位置的效果。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/UWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: header-start;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: header-end;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，左边框和右边框的位置，都指定为网格线的名字。<br>这四个属性的值还可以使用span关键字，表示”跨越”，即左右边框（上下边框）之间跨越多少个网格。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: span <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码表示，1号项目的左边框距离右边框跨越2个网格。<br>使用这四个属性，如果产生了项目的重叠，则使用z-index属性指定项目的重叠顺序。</p>\n<p><code>grid-column</code>属性是<code>grid-column-start</code>和<code>grid-column-end</code>的合并简写形式，<code>grid-row</code>属性是<code>grid-row-start</code>属性和<code>grid-row-end</code>的合并简写形式。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: &lt;grid-column-start&gt; / &lt;grid-column-end&gt;;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: &lt;grid-row-start&gt; / &lt;grid-row-end&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>下面是一个例子。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 等同于 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row-start</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row-end</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，项目item-1占据第一行，从第一根列线到第三根列线。</p>\n<p>这两个属性之中，也可以使用span关键字，表示跨越多少个网格。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#b03532</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 等同于 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#b03532</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / span <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / span <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，项目item-1占据的区域，包括第一行 + 第二行、第一列 + 第二列。<br>斜杠以及后面的部分可以省略，默认跨越一个网格。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，项目item-1占据左上角第一个网格。</p>\n<h4 id=\"grid-area\"><a href=\"#grid-area\" class=\"headerlink\" title=\"grid-area\"></a>grid-area</h4><p><code>grid-area</code>属性指定项目放在哪一个区域。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: e;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，1号项目位于e区域。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/dWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>grid-area属性还可用作grid-row-start、grid-column-start、grid-row-end、grid-column-end的合并简写形式，直接指定项目的位置。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>下面是一个例子。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 表示从第一个行第一列开始，到第三行第三列为止，因此是 2 * 2 个单元格 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: <span class=\"number\">1</span> / <span class=\"number\">1</span> / <span class=\"number\">3</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/JWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"justify-self-align-self-place-self\"><a href=\"#justify-self-align-self-place-self\" class=\"headerlink\" title=\"justify-self / align-self / place-self\"></a>justify-self / align-self / place-self</h4><p><code>justify-self</code>属性设置单元格内容的水平位置，跟justify-items属性的用法完全一致，但只作用于单个项目。<br><code>align-self</code>属性设置单元格内容的垂直位置，跟align-items属性的用法完全一致，也是只作用于单个项目。</p>\n<p>这两个属性都可以取下面四个值：</p>\n<ul>\n<li>start：对齐单元格的起始边缘。</li>\n<li>end：对齐单元格的结束边缘。</li>\n<li>center：单元格内部居中。</li>\n<li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-self</span>: start | end | center | stretch;</span><br><span class=\"line\">  <span class=\"attribute\">align-self</span>: start | end | center | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p><code>place-self</code>属性是<code>align-self</code>属性和<code>justify-self</code>属性的合并简写形式。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-self</span>: &lt;align-self&gt; &lt;justify-self&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>如果省略第二个值，<code>place-self</code>属性会认为这两个值相等。</p>\n","more":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>Grid布局是目前css 中最强大的布局方案，它的原理是将网页划分为一个个网格，使用网格系统来呈现各种各样的布局效果。因此，使用它可以实现所有形式的布局，尤其在做一些不规则的布局时，grid 的强大更显得尤为出众。</p>\n<blockquote>\n<p>为什么 grid 布局不如 flex 使用广泛？<br>flex 布局方式为轴线布局，他通过指定基准线的位置来划分网页的区块，可以看做一维布局，而 grid 布局则是将容器划分成”行”和”列”，产生单元格，然后操作划分出的单元格，可以看作是二维布局。因此 flex 布局语法本身要较 grid 简单清晰，而且大部分布局需求都有规整的结构，使用 flex 就可以轻松实现。最后，grid 的兼容性相对 flex 较差，并且没有很好地兼容方式。</p>\n</blockquote>\n<p><strong>grid 布局于 flex 布局有一定的相似性，下面的教程会对照写法，加深印象</strong></p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"项目和容器\"><a href=\"#项目和容器\" class=\"headerlink\" title=\"项目和容器\"></a>项目和容器</h3><p>采用网格布局的区域，称为”容器”（container）。容器内部采用网格定位的直接子元素，称为”项目”（item）。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>.container</code>为容器，3 个<code>.item</code>为项目。<br><strong>注意：项目只能是容器的直接子元素，比如上面代码的<code>&lt;p&gt;</code>就不是项目。Grid 布局只对<code>.item</code>生效。</strong></p>\n<h3 id=\"行、列、单元格\"><a href=\"#行、列、单元格\" class=\"headerlink\" title=\"行、列、单元格\"></a>行、列、单元格</h3><p>容器中水平的区域为行（row），垂直的区域为列（column），行和列交叉产生的区域称为单元格（cell）。<br>正常情况下，<code>m</code>行<code>n</code>列会产生<code>m * n</code>个单元格。</p>\n<h2 id=\"css-属性\"><a href=\"#css-属性\" class=\"headerlink\" title=\"css 属性\"></a>css 属性</h2><p>Grid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。</p>\n<h3 id=\"容器属性\"><a href=\"#容器属性\" class=\"headerlink\" title=\"容器属性\"></a>容器属性</h3><h4 id=\"display\"><a href=\"#display\" class=\"headerlink\" title=\"display\"></a>display</h4><p>使用<code>display: grid</code>可以指定一个容器采用网格布局。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>也可以使用<code>display: inline-grid</code>，设置为行内元素，效果类似于<code>inline-flex</code>。</p>\n<blockquote>\n<p>同 flex，设置为网格布局后，项目的<code>float</code>、<code>display: inline-block</code>等属性均失效</p>\n</blockquote>\n<h4 id=\"grid-template-columns-grid-template-rows\"><a href=\"#grid-template-columns-grid-template-rows\" class=\"headerlink\" title=\"grid-template-columns / grid-template-rows\"></a>grid-template-columns / grid-template-rows</h4><p>指定了网格布局后，就开始划分行和列。 <code>grid-template-columns</code> 用来定义每一列， <code>grid-template-rows</code>用来定义每一行。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码指定了一个三行三列的网格，宽高均为<code>100px</code></p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/AbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>也可以使用百分比</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/jbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"repeat\"><a href=\"#repeat\" class=\"headerlink\" title=\"repeat()\"></a>repeat()</h5><p>相信我们都发现了，当网格系统足够复杂时，需要我们写很多重复的值。这时可以使用<code>repeat()</code>函数简化重复的值，简化代码如下</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">3</span>, <span class=\"number\">33.33%</span>);</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">3</span>, <span class=\"number\">33.33%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>repeat()</code>接受两个参数，第一个是重复的次数，第二个是需要重复的值。<strong>而且这里的值不必非得是固定的值，我们可以给定一组值，同样可以重复执行。</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">2</span>, <span class=\"number\">100px</span> <span class=\"number\">80px</span> <span class=\"number\">60px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">9</span>, <span class=\"number\">100px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码表示每列按照<code>100px 80px 60px</code>的规则，重复两次。因此共得到了 6 列，表现为第一列和第四列的宽度为100px，第二列和第五列为80px，第三列和第六列为60px。又定义了 9 行，每行高度固定为<code>100px</code></p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/BbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"auto-fill\"><a href=\"#auto-fill\" class=\"headerlink\" title=\"auto-fill\"></a>auto-fill</h5><p>有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用<code>auto-fill</code>关键字表示自动填充。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(auto-fill, <span class=\"number\">100px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码容器宽<code>550px</code>，每列宽度<code>100px</code>，然后自动填充，因此从第六行开始折行显示。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/RbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"fr\"><a href=\"#fr\" class=\"headerlink\" title=\"fr\"></a>fr</h5><p>网格布局提供了<code>fr</code>关键字（fraction 的缩写，意为”片段”）。如果两列的宽度分别为1fr和2fr，就表示后者是前者的两倍。类似于 flex 中的项目的<code>flex-grow</code>属性。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码创建三个相同宽度的列。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/MbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p><code>fr</code>在与绝对长度的单位结合使用，会产生非常神奇的效果。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">150px</span> <span class=\"number\">1</span>fr <span class=\"number\">2</span>fr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码表示，第一列的宽度为150像素，第二列的宽度是第三列的一半。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/SbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"minmax\"><a href=\"#minmax\" class=\"headerlink\" title=\"minmax()\"></a>minmax()</h5><p><code>minmax()</code>函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr <span class=\"built_in\">minmax</span>(<span class=\"number\">100px</span>, <span class=\"number\">1</span>fr);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，minmax(100px, 1fr)表示列宽不小于100px，不大于1fr。</p>\n<h5 id=\"auto\"><a href=\"#auto\" class=\"headerlink\" title=\"auto\"></a>auto</h5><p><code>auto</code>关键字表示由浏览器自己决定长度。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> auto <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，第二列的宽度，基本上等于该列单元格的最大宽度，除非单元格内容设置了<code>min-width</code>，且这个值大于最大宽度。</p>\n<h5 id=\"网格线命名\"><a href=\"#网格线命名\" class=\"headerlink\" title=\"网格线命名\"></a>网格线命名</h5><p><code>grid-template-columns</code>属性和<code>grid-template-rows</code>属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: [c1] <span class=\"number\">100px</span> [c2] <span class=\"number\">100px</span> [c3] auto [c4];</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: [r1] <span class=\"number\">100px</span> [r2] <span class=\"number\">100px</span> [r3] auto [r4];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码指定网格布局为<code>3行 x 3列</code>，因此有<code>4</code>根垂直网格线和<code>4</code>根水平网格线。方括号里面依次是这八根线的名字。</p>\n<h4 id=\"row-gap-column-gap-gap\"><a href=\"#row-gap-column-gap-gap\" class=\"headerlink\" title=\"row-gap / column-gap / gap\"></a>row-gap / column-gap / gap</h4><p>grid-row-gap属性设置行与行的间隔（行间距），grid-column-gap属性设置列与列的间隔（列间距）。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">row-gap</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">column-gap</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，行间距和列间距均为<code>20px</code>。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/4bVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p><code>gap</code>属性是<code>column-gap</code>和<code>row-gap</code>的合并简写形式，语法如下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">gap</span>: &lt;row-gap&gt; &lt;column-gap&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>因此，上面一段 CSS 代码等同于下面的代码。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">gap</span>: <span class=\"number\">20px</span> <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果<code>gap</code>省略了第二个值，浏览器认为第二个值等于第一个值。</p>\n<h4 id=\"grid-template-areas\"><a href=\"#grid-template-areas\" class=\"headerlink\" title=\"grid-template-areas\"></a>grid-template-areas</h4><p>网格布局允许指定”区域”（area），一个区域由单个或多个单元格组成。<code>grid-template-areas</code>属性用于定义区域。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a b c'</span></span><br><span class=\"line\">                       <span class=\"string\">'d e f'</span></span><br><span class=\"line\">                       <span class=\"string\">'g h i'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码先划分出9个单元格，然后将其定名为<code>a</code>到<code>i</code>的九个区域，分别对应这九个单元格。</p>\n<p>多个单元格合并成一个区域的写法如下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a a a'</span></span><br><span class=\"line\">                       <span class=\"string\">'b b b'</span></span><br><span class=\"line\">                       <span class=\"string\">'c c c'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码将9个单元格分成<code>a</code>、<code>b</code>、<code>c</code>三个区域。</p>\n<p>下面是一个布局实例。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">\"header header header\"</span></span><br><span class=\"line\">                       <span class=\"string\">\"main main sidebar\"</span></span><br><span class=\"line\">                       <span class=\"string\">\"footer footer footer\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，顶部是<code>header</code>区域，底部是<code>footer</code>区域，中间部分左边为<code>main</code>区域，右边为<code>sidebar</code>区域。</p>\n<p>如果某些区域不需要利用，则使用<code>.</code>表示。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a . c'</span></span><br><span class=\"line\">                       <span class=\"string\">'d . f'</span></span><br><span class=\"line\">                       <span class=\"string\">'g . i'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域。</p>\n<blockquote>\n<p>注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为<code>区域名-start</code>，终止网格线自动命名为<code>区域名-end</code>。<br>比如，区域名为header，则起始位置的水平网格线和垂直网格线叫做<code>header-start</code>，终止位置的水平网格线和垂直网格线叫做<code>header-end</code>。</p>\n</blockquote>\n<h4 id=\"grid-auto-flow\"><a href=\"#grid-auto-flow\" class=\"headerlink\" title=\"grid-auto-flow\"></a>grid-auto-flow</h4><p>划分网格以后，容器的子元素会默认”先行后列”排序，即先填满第一行，再开始放入第二行，依次执行。</p>\n<p>通过<code>grid-auto-flow</code>属性可以改变网格的排序，默认为<code>row</code>,及“先行后列”，可以设置为<code>column</code>，变为“先列后行”。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/gWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>除了<code>row</code>和<code>column</code>，还可以设置为<code>row dense</code>和<code>column dense</code>。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。</p>\n<p>下面的例子中让1号项目和2号项目各占据两个单元格，然后在默认的<code>grid-auto-flow: row</code>情况下，会产生下面这样的布局。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/yWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>因为 3 号项目默认跟在 2 号项目之后，而第一行又无法容纳 2 号项目，所以第一行只能出现了空白。只要修改<code>grid-auto-flow: row dense</code>，就会在“先行后列”的基础上，尽可能紧密填满，不出现空格。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/bWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>如果将设置改为<code>column dense</code>，也是同样的意思，不过会遵循”先列后行”，并且尽量填满空格。</p>\n<h4 id=\"justify-items-align-items-place-items\"><a href=\"#justify-items-align-items-place-items\" class=\"headerlink\" title=\"justify-items / align-items / place-items\"></a>justify-items / align-items / place-items</h4><p><code>justify-items</code>属性设置单元格内容的水平位置，<code>align-items</code>属性设置单元格内容的垂直位置。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-items</span>: start | end | center | stretch;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: start | end | center | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这两个属性的写法完全相同，都可以取下面这些值：</p>\n<ul>\n<li>start：对齐单元格的起始边缘。</li>\n<li>end：对齐单元格的结束边缘。</li>\n<li>center：单元格内部居中。</li>\n<li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li>\n</ul>\n<p><code>place-items</code>属性是<code>align-items</code>属性和<code>justify-items</code>属性的合并简写形式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-items</span>: &lt;align-items&gt; &lt;justify-items&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果省略第二个值，则浏览器认为与第一个值相等。</p>\n<h4 id=\"justify-content-align-content-place-content\"><a href=\"#justify-content-align-content-place-content\" class=\"headerlink\" title=\"justify-content / align-content / place-content\"></a>justify-content / align-content / place-content</h4><p><code>justify-content</code>属性是整个内容区域在容器里面的水平位置，<code>align-content</code>属性是整个内容区域的垂直位置。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;</span><br><span class=\"line\">  <span class=\"attribute\">align-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这两个属性的写法完全相同，都可以取下面这些值:</p>\n<ul>\n<li>start: 对齐容器的起始边框。</li>\n<li>end: 对齐容器的结束边框。</li>\n<li>center: 容器内部居中。</li>\n<li>stretch: 项目大小没有指定时，拉伸占据整个网格容器。</li>\n<li>space-around: 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍。</li>\n<li>space-between: 项目与项目的间隔相等，项目与容器边框之间没有间隔。</li>\n<li>space-evenly: 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。</li>\n</ul>\n<p><code>place-content</code>属性是<code>align-content</code>属性和<code>justify-content</code>属性的合并简写形式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-content</span>: &lt;align-content&gt; &lt;justify-content&gt;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果省略第二个值，浏览器就会假定第二个值等于第一个值。</p>\n<h4 id=\"grid-auto-columns-grid-auto-rows\"><a href=\"#grid-auto-columns-grid-auto-rows\" class=\"headerlink\" title=\"grid-auto-columns / grid-auto-rows\"></a>grid-auto-columns / grid-auto-rows</h4><p>有时候，一些项目的指定位置，在现有网格的外部。比如网格只有3列，但是某一个项目指定在第5行。这时，浏览器会自动生成多余的网格，以便放置项目。</p>\n<p><code>grid-auto-columns</code>属性和<code>grid-auto-rows</code>属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与<code>grid-template-columns</code>和<code>grid-template-rows</code>完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。</p>\n<p>下面的例子里面，划分好的网格是3行 x 3列，但是，8号项目指定在第4行，9号项目指定在第5行,并指定新增的行高统一为50px（原始的行高为100px）。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-auto-rows</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/wWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"项目属性\"><a href=\"#项目属性\" class=\"headerlink\" title=\"项目属性\"></a>项目属性</h3><h4 id=\"grid-column-start-grid-column-end-grid-row-start-grid-row-end-grid-column-grid-row\"><a href=\"#grid-column-start-grid-column-end-grid-row-start-grid-row-end-grid-column-grid-row\" class=\"headerlink\" title=\"grid-column-start / grid-column-end / grid-row-start / grid-row-end / grid-column / grid-row\"></a>grid-column-start / grid-column-end / grid-row-start / grid-row-end / grid-column / grid-row</h4><p>项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。</p>\n<ul>\n<li><code>grid-column-start</code>表示左边框贴紧的垂直网格线</li>\n<li><code>grid-column-end</code>表示右边框贴紧的垂直网格线</li>\n<li><code>grid-row-start</code>表示上边框贴紧的水平网格线</li>\n<li><code>grid-row-end</code>表示下边框贴紧的水平网格线</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: <span class=\"number\">4</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码指定，1号项目的左边框是第二根垂直网格线，右边框是第四根垂直网格线。但并没有指定上下边框，所以会采用默认位置。而除了1号项目以外，其他项目都没有指定位置，将由浏览器自动布局，这时它们的位置由容器的<code>grid-auto-flow</code>属性决定，参考上面的教程，不再赘述。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/TWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>下面的例子是指定四个边框位置的效果。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/UWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: header-start;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: header-end;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，左边框和右边框的位置，都指定为网格线的名字。<br>这四个属性的值还可以使用span关键字，表示”跨越”，即左右边框（上下边框）之间跨越多少个网格。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: span <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码表示，1号项目的左边框距离右边框跨越2个网格。<br>使用这四个属性，如果产生了项目的重叠，则使用z-index属性指定项目的重叠顺序。</p>\n<p><code>grid-column</code>属性是<code>grid-column-start</code>和<code>grid-column-end</code>的合并简写形式，<code>grid-row</code>属性是<code>grid-row-start</code>属性和<code>grid-row-end</code>的合并简写形式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: &lt;grid-column-start&gt; / &lt;grid-column-end&gt;;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: &lt;grid-row-start&gt; / &lt;grid-row-end&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面是一个例子。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 等同于 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row-start</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row-end</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，项目item-1占据第一行，从第一根列线到第三根列线。</p>\n<p>这两个属性之中，也可以使用span关键字，表示跨越多少个网格。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#b03532</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 等同于 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#b03532</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / span <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / span <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，项目item-1占据的区域，包括第一行 + 第二行、第一列 + 第二列。<br>斜杠以及后面的部分可以省略，默认跨越一个网格。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，项目item-1占据左上角第一个网格。</p>\n<h4 id=\"grid-area\"><a href=\"#grid-area\" class=\"headerlink\" title=\"grid-area\"></a>grid-area</h4><p><code>grid-area</code>属性指定项目放在哪一个区域。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: e;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，1号项目位于e区域。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/dWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>grid-area属性还可用作grid-row-start、grid-column-start、grid-row-end、grid-column-end的合并简写形式，直接指定项目的位置。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面是一个例子。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 表示从第一个行第一列开始，到第三行第三列为止，因此是 2 * 2 个单元格 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: <span class=\"number\">1</span> / <span class=\"number\">1</span> / <span class=\"number\">3</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/JWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"justify-self-align-self-place-self\"><a href=\"#justify-self-align-self-place-self\" class=\"headerlink\" title=\"justify-self / align-self / place-self\"></a>justify-self / align-self / place-self</h4><p><code>justify-self</code>属性设置单元格内容的水平位置，跟justify-items属性的用法完全一致，但只作用于单个项目。<br><code>align-self</code>属性设置单元格内容的垂直位置，跟align-items属性的用法完全一致，也是只作用于单个项目。</p>\n<p>这两个属性都可以取下面四个值：</p>\n<ul>\n<li>start：对齐单元格的起始边缘。</li>\n<li>end：对齐单元格的结束边缘。</li>\n<li>center：单元格内部居中。</li>\n<li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-self</span>: start | end | center | stretch;</span><br><span class=\"line\">  <span class=\"attribute\">align-self</span>: start | end | center | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>place-self</code>属性是<code>align-self</code>属性和<code>justify-self</code>属性的合并简写形式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-self</span>: &lt;align-self&gt; &lt;justify-self&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果省略第二个值，<code>place-self</code>属性会认为这两个值相等。</p>\n","categories":[{"name":"css","path":"api/categories/css.json"}],"tags":[{"name":"css","path":"api/tags/css.json"}]}